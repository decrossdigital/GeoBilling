"use client"

import { useState, useEffect } from "react"
import { useSession } from "next-auth/react"
import { useParams, useRouter } from "next/navigation"
import Link from "next/link"
import UserMenu from "@/components/user-menu"
import { 
  ArrowLeft, Edit, Trash2, Mail, Phone, Users, FileText, DollarSign, TrendingUp, 
  Music, Home, User, BarChart3, Settings, Plus, Calendar, MapPin, Building, 
  Clock, Star, ExternalLink, MessageSquare, Save, X, CheckCircle, AlertCircle,
  Download, Send, CreditCard
} from "lucide-react"

interface Quote {
  id: string
  quoteNumber: string
  title: string
  description: string
  status: "draft" | "sent" | "accepted" | "rejected" | "expired"
  validUntil: string
  createdAt: string
  total: number
  subtotal: number
  taxRate: number
  taxAmount: number
  depositAmount?: number
  depositPaid?: boolean
  terms: string
  notes: string
  client: {
    id: string
    name: string
    email: string
    phone: string
    company: string
    address: string
  }
  items: QuoteItem[]
}

interface QuoteItem {
  id: string
  serviceName: string
  description: string
  quantity: number
  unitPrice: number
  total: number
  serviceTemplateId: string
  contractor?: {
    id: string
    name: string
    email: string
    phone: string
  }
}

interface QuoteContractor {
  id: string
  name: string
  email: string
  phone: string
  paymentType: "hourly" | "flat"
  hours?: number
  rate?: number
  amount: number
}

export default function QuoteDetailPage() {
  const { data: session } = useSession()
  const params = useParams()
  const router = useRouter()
  const quoteId = params.id as string

  const [quote, setQuote] = useState<Quote | null>(null)
  const [loading, setLoading] = useState(true)
  const [editing, setEditing] = useState(false)
  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false)
  const [showConvertConfirm, setShowConvertConfirm] = useState(false)
  const [showEmailModal, setShowEmailModal] = useState(false)
  const [emailData, setEmailData] = useState({
    to: "",
    subject: "",
    message: ""
  })
  const [sendingEmail, setSendingEmail] = useState(false)
  const [converting, setConverting] = useState(false)
  const [deleting, setDeleting] = useState(false)
  const [editingService, setEditingService] = useState<string | null>(null)
  const [showAddServiceModal, setShowAddServiceModal] = useState(false)
  const [showAddContractorModal, setShowAddContractorModal] = useState(false)
  const [contractors, setContractors] = useState<any[]>([])
  const [selectedContractor, setSelectedContractor] = useState<string>('')
  const [selectedService, setSelectedService] = useState<string>('')

  // Form state for editing
  const [editForm, setEditForm] = useState({
    title: "",
    description: "",
    validUntil: "",
    terms: "",
    notes: "",
    depositAmount: 0
  })

  useEffect(() => {
    const fetchQuote = async () => {
      try {
      const response = await fetch(`/api/quotes/${quoteId}/items`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        const response = await fetch(`/api/quotes/${quoteId}`)
        if (response.ok) {
          const data = await response.json()
          setQuote(data)
          setEditForm({
            title: data.title,
            description: data.description,
            validUntil: data.validUntil,
            terms: data.terms,
            notes: data.notes,
            depositAmount: data.depositAmount || 0
          })
          setEmailData({
            to: data.client.email,
            subject: `Quote #${data.quoteNumber} - ${data.title}`,
            message: `Dear ${data.client.name},\n\nPlease find attached our quote #${data.quoteNumber} for ${data.title}.\n\nTotal Amount: $${data.total.toFixed(2)}\nValid Until: ${new Date(data.validUntil).toLocaleDateString()}\n\nPlease let us know if you have any questions.\n\nBest regards,\nGeoBilling Team`
          })
        } else {
          console.error('Failed to fetch quote')
          alert('Failed to fetch quote details')
        }
      } catch (error) {
        console.error('Error fetching quote:', error)
        alert('Error fetching quote details')
      } finally {
        setLoading(false)
      }
    }

    const fetchContractors = async () => {
      try {
      const response = await fetch(`/api/quotes/${quoteId}/items`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        const response = await fetch('/api/contractors')
        if (response.ok) {
          const data = await response.json()
          setContractors(data)
        }
      } catch (error) {
        console.error('Error fetching contractors:', error)
      }
    }

    if (session && quoteId) {
      fetchQuote()
      fetchContractors()
    }
  }, [session, quoteId])

  const handleSendEmail = async () => {
    setSendingEmail(true)
    try {
      const response = await fetch(`/api/quotes/${quoteId}/items`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      const response = await fetch('/api/quotes/send-email', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          quoteId: quoteId,
          to: emailData.to,
          subject: emailData.subject,
          message: emailData.message
        })
      })

      if (response.ok) {
        alert('Quote sent successfully!')
        setShowEmailModal(false)
        // Update quote status to 'sent'
        setQuote(prev => prev ? { ...prev, status: 'sent' } : null)
      } else {
        alert('Failed to send quote')
      }
    } catch (error) {
      console.error('Error sending quote:', error)
      alert('Error sending quote')
    } finally {
      setSendingEmail(false)
    }
  }

    const handleConvertToInvoice = async () => {
    setConverting(true)
    try {
      const response = await fetch(`/api/quotes/${quoteId}/items`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      const response = await fetch('/api/invoices', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          quoteId: quoteId,
          clientId: quote?.client.id,
          clientName: quote?.client.name,
          clientEmail: quote?.client.email,
          clientPhone: quote?.client.phone,
          clientAddress: quote?.client.address,
          title: quote?.title,
          description: quote?.description,
          items: quote?.items,
          subtotal: quote?.subtotal,
          taxRate: quote?.taxRate,
          taxAmount: quote?.taxAmount,
          total: quote?.total,
          depositAmount: quote?.depositAmount,
          terms: quote?.terms,
          notes: quote?.notes,
          dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(), // 30 days from now
          status: 'draft'
        })
      })

      if (response.ok) {
        const invoice = await response.json()
        alert('Quote converted to invoice successfully!')
        // Update quote status to 'converted' and redirect to invoice
        await fetch(`/api/quotes/${quoteId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            ...quote,
            status: 'converted'
          })
        })
        router.push(`/invoices/${invoice.id}`)
      } else {
        const errorData = await response.json()
        alert(`Failed to convert quote to invoice: ${errorData.error || 'Unknown error'}`)
      }
    } catch (error) {
      console.error('Error converting quote:', error)
      alert('Error converting quote to invoice')
    } finally {
      setConverting(false)
      setShowConvertConfirm(false)
    }
  }

  const handleDeleteService = async (serviceId: string) => {
    if (!confirm('Are you sure you want to delete this service?')) return
    
    try {
      const response = await fetch(`/api/quotes/${quoteId}/items`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      const response = await fetch(`/api/quotes/${quoteId}/items/${serviceId}`, {
        method: 'DELETE'
      })

      if (response.ok) {
        // Refresh quote data
        const quoteResponse = await fetch(`/api/quotes/${quoteId}`)
        if (quoteResponse.ok) {
          const updatedQuote = await quoteResponse.json()
          setQuote(updatedQuote)
        }
        alert('Service deleted successfully!')
      } else {
        alert('Failed to delete service')
      }
    } catch (error) {
      console.error('Error deleting service:', error)
      alert('Error deleting service')
    }
  }

  const handleAssignContractor = async () => {
    if (!selectedContractor) {
      alert('Please select a contractor')
      return
    }

    try {
      const response = await fetch(`/api/quotes/${quoteId}/items`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        },
        body: JSON.stringify({
          serviceName: "Contractor Assignment",
          description: "Contractor assigned to this quote",
          quantity: 1,
          unitPrice: 0,
          total: 0,
          contractorId: selectedContractor
        })
      })

      if (response.ok) {
        // Refresh quote data
        const quoteResponse = await fetch(`/api/quotes/${quoteId}`)
        if (quoteResponse.ok) {
          const updatedQuote = await quoteResponse.json()
          setQuote(updatedQuote)
        }
        alert('Contractor assigned successfully!')
        setShowAddContractorModal(false)
        setSelectedContractor('')
        
      } else {
        alert('Failed to assign contractor')
      }
    } catch (error) {
      console.error('Error assigning contractor:', error)
      alert('Error assigning contractor')
    }
  }

  const handleRemoveContractor = async (serviceId: string) => {
    if (!confirm('Are you sure you want to remove this contractor from the service?')) return

    try {
      const response = await fetch(`/api/quotes/${quoteId}/items`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      const serviceItem = quote?.items.find(item => item.id === serviceId)
      if (!serviceItem) {
        alert('Service not found')
        return
      }

      const response = await fetch(`/api/quotes/${quoteId}/items/${serviceId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          serviceName: "Contractor Assignment",
          contractorId: null
        })
      })

      if (response.ok) {
        // Refresh quote data
        const quoteResponse = await fetch(`/api/quotes/${quoteId}`)
        if (quoteResponse.ok) {
          const updatedQuote = await quoteResponse.json()
          setQuote(updatedQuote)
        }
        alert('Contractor removed successfully!')
      } else {
        alert('Failed to remove contractor')
      }
    } catch (error) {
      console.error('Error removing contractor:', error)
      alert('Error removing contractor')
    }
  }

  const handleDeleteQuote = async () => {
    setDeleting(true)
    try {
      const response = await fetch(`/api/quotes/${quoteId}/items`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      const response = await fetch(`/api/quotes/${quoteId}`, {
        method: 'DELETE'
      })

      if (response.ok) {
        alert('Quote deleted successfully!')
        router.push('/quotes')
      } else {
        alert('Failed to delete quote')
      }
    } catch (error) {
      console.error('Error deleting quote:', error)
      alert('Error deleting quote')
    } finally {
      setDeleting(false)
      setShowDeleteConfirm(false)
    }
  }

  if (loading) {
    return (
      <div style={{
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #0f172a 100%)',
        color: 'white',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center'
      }}>
        <div style={{fontSize: '1.125rem'}}>Loading quote details...</div>
      </div>
    )
  }

  if (!quote) {
    return (
      <div style={{
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #0f172a 100%)',
        color: 'white',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center'
      }}>
        <div style={{fontSize: '1.125rem'}}>Quote not found</div>
      </div>
    )
  }

  return (
    <div style={{minHeight: '100vh', background: 'linear-gradient(to bottom right, #0f172a, #581c87, #0f172a)', color: 'white'}}>
      <div style={{maxWidth: '1200px', margin: '0 auto', padding: '2rem 1.5rem'}}>
        {/* Header */}
        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '2rem'}}>
          <div style={{display: 'flex', alignItems: 'center', gap: '0.75rem'}}>
            <div style={{padding: '0.75rem', background: 'linear-gradient(to right, #9333ea, #ec4899)', borderRadius: '1rem'}}>
              <Music style={{height: '2rem', width: '2rem', color: 'white'}} />
            </div>
            <div>
              <h1 style={{fontSize: '1.875rem', fontWeight: 'bold', color: 'white'}}>GeoBilling</h1>
              <p style={{fontSize: '0.875rem', color: '#cbd5e1'}}>Uniquitous Music - Professional Billing System</p>
            </div>
          </div>
        </div>

        {/* Navigation */}
        <div style={{backgroundColor: 'rgba(255, 255, 255, 0.1)', backdropFilter: 'blur(8px)', border: '1px solid rgba(255, 255, 255, 0.2)', borderRadius: '0.75rem', padding: '1rem', marginBottom: '2rem'}}>
          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>
            <div style={{display: 'flex', gap: '0.5rem'}}>
              <Link href="/" style={{display: 'flex', alignItems: 'center', gap: '0.5rem', padding: '0.75rem 1rem', borderRadius: '0.75rem', color: '#cbd5e1', textDecoration: 'none', fontWeight: '500'}}>
                <Home style={{height: '1rem', width: '1rem'}} />
                <span>Dashboard</span>
              </Link>
              <Link href="/clients" style={{display: 'flex', alignItems: 'center', gap: '0.5rem', padding: '0.75rem 1rem', borderRadius: '0.75rem', color: '#cbd5e1', textDecoration: 'none', fontWeight: '500'}}>
                <Users style={{height: '1rem', width: '1rem'}} />
                <span>Clients</span>
              </Link>
              <Link href="/quotes" style={{display: 'flex', alignItems: 'center', gap: '0.5rem', padding: '0.75rem 1rem', borderRadius: '0.75rem', background: 'linear-gradient(to right, #9333ea, #3b82f6)', color: 'white', textDecoration: 'none', fontWeight: '500', boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)'}}>
                <FileText style={{height: '1rem', width: '1rem'}} />
                <span>Quotes</span>
              </Link>
              <Link href="/invoices" style={{display: 'flex', alignItems: 'center', gap: '0.5rem', padding: '0.75rem 1rem', borderRadius: '0.75rem', color: '#cbd5e1', textDecoration: 'none', fontWeight: '500'}}>
                <DollarSign style={{height: '1rem', width: '1rem'}} />
                <span>Invoices</span>
              </Link>
              <Link href="/contractors" style={{display: 'flex', alignItems: 'center', gap: '0.5rem', padding: '0.75rem 1rem', borderRadius: '0.75rem', color: '#cbd5e1', textDecoration: 'none', fontWeight: '500'}}>
                <User style={{height: '1rem', width: '1rem'}} />
                <span>Contractors</span>
              </Link>
              <Link href="/settings" style={{display: 'flex', alignItems: 'center', gap: '0.5rem', padding: '0.75rem 1rem', borderRadius: '0.75rem', color: '#cbd5e1', textDecoration: 'none', fontWeight: '500'}}>
                <Settings style={{height: '1rem', width: '1rem'}} />
                <span>Settings</span>
              </Link>
            </div>
            <div style={{display: 'flex', alignItems: 'center', gap: '1rem'}}>
              <UserMenu />
            </div>
          </div>
                </div>

        {/* Page Header */}
        <div style={{marginBottom: '2rem'}}>
          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '1rem'}}>
            <div>
              <h1 style={{fontSize: '2.25rem', fontWeight: 'bold', color: 'white'}}>Quote Details</h1>
              <p style={{color: '#cbd5e1'}}>Quote #{quote.quoteNumber} - {quote.title}</p>
            </div>
            <Link href="/quotes" style={{
              display: 'flex',
              alignItems: 'center',
              gap: '0.5rem',
              color: '#60a5fa',
              textDecoration: 'none',
              fontSize: '0.875rem'
            }}>
              <ArrowLeft style={{height: '1rem', width: '1rem'}} />
              Back to Quotes
            </Link>
          </div>
        </div>

        {/* Quote Header */}
        <div style={{
          background: 'rgba(255, 255, 255, 0.1)',
          backdropFilter: 'blur(8px)',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          borderRadius: '0.75rem',
          padding: '2rem',
          marginBottom: '2rem'
        }}>
          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '1.5rem'}}>
            <div>
              <h1 style={{fontSize: '2rem', fontWeight: 'bold', color: 'white', margin: 0}}>{quote.title}</h1>
              <p style={{fontSize: '1.125rem', color: '#cbd5e1', margin: 0}}>Quote #{quote.quoteNumber}</p>
            </div>
            <div style={{display: 'flex', alignItems: 'center', gap: '0.5rem'}}>
              <div style={{
                display: 'flex',
                alignItems: 'center',
                gap: '0.25rem',
                padding: '0.25rem 0.75rem',
                borderRadius: '0.25rem',
                fontSize: '0.875rem',
                fontWeight: '500',
                backgroundColor: quote.status === 'draft' ? 'rgba(148, 163, 184, 0.2)' : 
                               quote.status === 'sent' ? 'rgba(59, 130, 246, 0.2)' :
                               quote.status === 'accepted' ? 'rgba(52, 211, 153, 0.2)' :
                               quote.status === 'rejected' ? 'rgba(248, 113, 113, 0.2)' :
                               'rgba(245, 158, 11, 0.2)',
                color: quote.status === 'draft' ? '#94a3b8' : 
                       quote.status === 'sent' ? '#3b82f6' :
                       quote.status === 'accepted' ? '#34d399' :
                       quote.status === 'rejected' ? '#f87171' :
                       '#f59e0b'
              }}>
                {quote.status}
              </div>
            </div>
          </div>

          {/* Action Buttons */}
          <div style={{display: 'flex', gap: '0.75rem', flexWrap: 'wrap'}}>
            <button
              onClick={() => setShowEmailModal(true)}
              style={{
                display: 'flex',
                alignItems: 'center',
                gap: '0.5rem',
                padding: '0.75rem 1.5rem',
                background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',
                border: 'none',
                borderRadius: '0.5rem',
                color: 'white',
                cursor: 'pointer',
                fontSize: '0.875rem',
                fontWeight: '500'
              }}
            >
              <Send style={{height: '1rem', width: '1rem'}} />
              Send via Email
            </button>
            <button
              onClick={() => setShowConvertConfirm(true)}
              style={{
                display: 'flex',
                alignItems: 'center',
                gap: '0.5rem',
                padding: '0.75rem 1.5rem',
                background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',
                border: 'none',
                borderRadius: '0.5rem',
                color: 'white',
                cursor: 'pointer',
                fontSize: '0.875rem',
                fontWeight: '500'
              }}
            >
              <DollarSign style={{height: '1rem', width: '1rem'}} />
              Convert to Invoice
            </button>
            <button
              onClick={() => alert('Download functionality will be implemented')}
              style={{
                display: 'flex',
                alignItems: 'center',
                gap: '0.5rem',
                padding: '0.75rem 1.5rem',
                background: 'rgba(255, 255, 255, 0.1)',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                borderRadius: '0.5rem',
                color: 'white',
                cursor: 'pointer',
                fontSize: '0.875rem',
                fontWeight: '500'
              }}
            >
              <Download style={{height: '1rem', width: '1rem'}} />
              Download PDF
            </button>
            <button
              onClick={() => setShowDeleteConfirm(true)}
              style={{
                display: 'flex',
                alignItems: 'center',
                gap: '0.5rem',
                padding: '0.75rem 1.5rem',
                background: 'rgba(239, 68, 68, 0.2)',
                border: '1px solid rgba(239, 68, 68, 0.3)',
                borderRadius: '0.5rem',
                color: '#f87171',
                cursor: 'pointer',
                fontSize: '0.875rem',
                fontWeight: '500'
              }}
            >
              <Trash2 style={{height: '1rem', width: '1rem'}} />
              Delete Quote
            </button>
          </div>
        </div>

        {/* Two Column Layout */}
        <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '2rem'}}>
          {/* Left Column */}
          <div>
            {/* Client Information */}
            <div style={{
              background: 'rgba(255, 255, 255, 0.1)',
              backdropFilter: 'blur(8px)',
              border: '1px solid rgba(255, 255, 255, 0.2)',
              borderRadius: '0.75rem',
              padding: '1.5rem',
              marginBottom: '2rem'
            }}>
              <h2 style={{fontSize: '1.25rem', fontWeight: 'bold', color: 'white', marginBottom: '1rem'}}>Client Information</h2>
              <div style={{display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.75rem'}}>
                <User style={{height: '1rem', width: '1rem', color: '#cbd5e1'}} />
                <span style={{color: 'white', fontWeight: '500'}}>{quote.client.name}</span>
                {quote.client.company && (
                  <span style={{color: '#cbd5e1'}}>• {quote.client.company}</span>
                )}
              </div>
              <div style={{display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.75rem'}}>
                <Mail style={{height: '1rem', width: '1rem', color: '#cbd5e1'}} />
                <span style={{color: '#cbd5e1'}}>{quote.client.email}</span>
              </div>
              {quote.client.phone && (
                <div style={{display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.75rem'}}>
                  <Phone style={{height: '1rem', width: '1rem', color: '#cbd5e1'}} />
                  <span style={{color: '#cbd5e1'}}>{quote.client.phone}</span>
                </div>
              )}
              {quote.client.address && (
                <div style={{display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.75rem'}}>
                  <MapPin style={{height: '1rem', width: '1rem', color: '#cbd5e1'}} />
                  <span style={{color: '#cbd5e1'}}>{quote.client.address}</span>
                </div>
              )}
            </div>

            {/* Quote Details */}
            <div style={{
              background: 'rgba(255, 255, 255, 0.1)',
              backdropFilter: 'blur(8px)',
              border: '1px solid rgba(255, 255, 255, 0.2)',
              borderRadius: '0.75rem',
              padding: '1.5rem',
              marginBottom: '2rem'
            }}>
              <h2 style={{fontSize: '1.25rem', fontWeight: 'bold', color: 'white', marginBottom: '1rem'}}>Quote Details</h2>
              <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '1rem'}}>
                <div>
                  <p style={{fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.25rem'}}>Created</p>
                  <p style={{fontSize: '1rem', color: 'white', fontWeight: '500'}}>{new Date(quote.createdAt).toLocaleDateString()}</p>
                </div>
                <div>
                  <p style={{fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.25rem'}}>Valid Until</p>
                  <p style={{fontSize: '1rem', color: 'white', fontWeight: '500'}}>{new Date(quote.validUntil).toLocaleDateString()}</p>
                </div>
                <div>
                  <p style={{fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.25rem'}}>Subtotal</p>
                  <p style={{fontSize: '1rem', color: 'white', fontWeight: '500'}}>${quote.subtotal.toFixed(2)}</p>
                </div>
                <div>
                  <p style={{fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.25rem'}}>Tax ({quote.taxRate}%)</p>
                  <p style={{fontSize: '1rem', color: 'white', fontWeight: '500'}}>${quote.taxAmount.toFixed(2)}</p>
                </div>
                <div>
                  <p style={{fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.25rem'}}>Deposit Required</p>
                  <p style={{fontSize: '1rem', color: 'white', fontWeight: '500'}}>${(quote.depositAmount || 0).toFixed(2)}</p>
                </div>
                <div>
                  <p style={{fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.25rem'}}>Total</p>
                  <p style={{fontSize: '1.25rem', color: 'white', fontWeight: 'bold'}}>${quote.total.toFixed(2)}</p>
                </div>
              </div>
            </div>

            {/* Terms and Notes */}
            {quote.terms && (
              <div style={{
                background: 'rgba(255, 255, 255, 0.1)',
                backdropFilter: 'blur(8px)',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                borderRadius: '0.75rem',
                padding: '1.5rem',
                marginBottom: '2rem'
              }}>
                <h2 style={{fontSize: '1.25rem', fontWeight: 'bold', color: 'white', marginBottom: '1rem'}}>Terms & Conditions</h2>
                <p style={{fontSize: '0.875rem', color: '#cbd5e1', lineHeight: '1.6', margin: 0}}>{quote.terms}</p>
              </div>
            )}

            {quote.notes && (
              <div style={{
                background: 'rgba(255, 255, 255, 0.1)',
                backdropFilter: 'blur(8px)',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                borderRadius: '0.75rem',
                padding: '1.5rem'
              }}>
                <h2 style={{fontSize: '1.25rem', fontWeight: 'bold', color: 'white', marginBottom: '1rem'}}>Notes</h2>
                <p style={{fontSize: '0.875rem', color: '#cbd5e1', lineHeight: '1.6', margin: 0}}>{quote.notes}</p>
              </div>
            )}
          </div>

          {/* Right Column */}
          <div>
            {/* Services */}
            <div style={{
              background: 'rgba(255, 255, 255, 0.1)',
              backdropFilter: 'blur(8px)',
              border: '1px solid rgba(255, 255, 255, 0.2)',
              borderRadius: '0.75rem',
              padding: '1.5rem',
              marginBottom: '2rem'
            }}>
              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '1rem'}}>
                <h2 style={{fontSize: '1.25rem', fontWeight: 'bold', color: 'white', margin: 0}}>Services</h2>
                <button
                  onClick={() => setShowAddServiceModal(true)}
                  style={{
                    display: 'flex',
                    alignItems: 'center',
                    gap: '0.25rem',
                    padding: '0.5rem 0.75rem',
                    background: 'rgba(255, 255, 255, 0.1)',
                    border: '1px solid rgba(255, 255, 255, 0.2)',
                    borderRadius: '0.25rem',
                    color: 'white',
                    cursor: 'pointer',
                    fontSize: '0.75rem',
                    fontWeight: '500'
                  }}
                >
                  <Plus style={{height: '0.875rem', width: '0.875rem'}} />
                  Add Service
                </button>
              </div>
              {quote.items && quote.items.length > 0 ? (
                <div>
                  {quote.items.map((item, index) => (
                    <div key={item.id} style={{
                      padding: '1rem',
                      background: 'rgba(255, 255, 255, 0.05)',
                      borderRadius: '0.5rem',
                      border: '1px solid rgba(255, 255, 255, 0.1)',
                      marginBottom: '0.75rem'
                    }}>
                      <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '0.5rem'}}>
                        <div>
                          <p style={{fontSize: '1rem', color: 'white', fontWeight: '500', margin: 0}}>{item.serviceName}</p>
                          <p style={{fontSize: '0.875rem', color: '#cbd5e1', margin: '0.25rem 0 0 0'}}>{item.description}</p>
                        </div>
                        <div style={{textAlign: 'right'}}>
                          <p style={{fontSize: '1rem', color: 'white', fontWeight: '500', margin: 0}}>${item.total.toFixed(2)}</p>
                          <p style={{fontSize: '0.75rem', color: '#cbd5e1', margin: 0}}>
                            {item.quantity} × ${item.unitPrice.toFixed(2)}
                          </p>
                        </div>
                      </div>
                      <div style={{display: 'flex', gap: '0.5rem', justifyContent: 'flex-end'}}>
                        <button
                          onClick={() => setEditingService(item.id)}
                          style={{
                            display: 'flex',
                            alignItems: 'center',
                            gap: '0.25rem',
                            padding: '0.25rem 0.5rem',
                            background: 'rgba(59, 130, 246, 0.2)',
                            border: '1px solid rgba(59, 130, 246, 0.3)',
                            borderRadius: '0.25rem',
                            color: '#60a5fa',
                            cursor: 'pointer',
                            fontSize: '0.75rem',
                            fontWeight: '500'
                          }}
                        >
                          <Edit style={{height: '0.75rem', width: '0.75rem'}} />
                          Edit
                        </button>
                        <button
                          onClick={() => handleDeleteService(item.id)}
                          style={{
                            display: 'flex',
                            alignItems: 'center',
                            gap: '0.25rem',
                            padding: '0.25rem 0.5rem',
                            background: 'rgba(239, 68, 68, 0.2)',
                            border: '1px solid rgba(239, 68, 68, 0.3)',
                            borderRadius: '0.25rem',
                            color: '#f87171',
                            cursor: 'pointer',
                            fontSize: '0.75rem',
                            fontWeight: '500'
                          }}
                        >
                          <Trash2 style={{height: '0.75rem', width: '0.75rem'}} />
                          Delete
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
              ) : (
                <div style={{
                  padding: '2rem',
                  textAlign: 'center',
                  color: '#cbd5e1'
                }}>
                  <FileText style={{height: '2rem', width: '2rem', margin: '0 auto 0.5rem auto', opacity: 0.5}} />
                  <p style={{fontSize: '0.875rem', margin: 0}}>No services added yet</p>
                </div>
              )}
            </div>

            {/* Contractors */}
            <div style={{
              background: 'rgba(255, 255, 255, 0.1)',
              backdropFilter: 'blur(8px)',
              border: '1px solid rgba(255, 255, 255, 0.2)',
              borderRadius: '0.75rem',
              padding: '1.5rem'
            }}>
              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '1rem'}}>
                <h2 style={{fontSize: '1.25rem', fontWeight: 'bold', color: 'white', margin: 0}}>Contractors</h2>
                <button
                  onClick={() => setShowAddContractorModal(true)}
                  style={{
                    display: 'flex',
                    alignItems: 'center',
                    gap: '0.25rem',
                    padding: '0.5rem 0.75rem',
                    background: 'rgba(255, 255, 255, 0.1)',
                    border: '1px solid rgba(255, 255, 255, 0.2)',
                    borderRadius: '0.25rem',
                    color: 'white',
                    cursor: 'pointer',
                    fontSize: '0.75rem',
                    fontWeight: '500'
                  }}
                >
                  <Plus style={{height: '0.875rem', width: '0.875rem'}} />
                  Add Contractor
                </button>
              </div>
              {quote.items && quote.items.filter(item => item.contractor).length > 0 ? (
                <div>
                  {quote.items.filter(item => item.contractor).map((item, index) => (
                    <div key={item.id} style={{
                      padding: '1rem',
                      background: 'rgba(255, 255, 255, 0.05)',
                      borderRadius: '0.5rem',
                      border: '1px solid rgba(255, 255, 255, 0.1)',
                      marginBottom: '0.75rem'
                    }}>
                      <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '0.5rem'}}>
                        <div>
                          <p style={{fontSize: '1rem', color: 'white', fontWeight: '500', margin: 0}}>{item.contractor?.name}</p>
                          <p style={{fontSize: '0.875rem', color: '#cbd5e1', margin: '0.25rem 0 0 0'}}>{item.contractor?.email}</p>
                          <p style={{fontSize: '0.75rem', color: '#cbd5e1', margin: '0.25rem 0 0 0'}}>
                            {item.serviceName}
                          </p>
                        </div>
                        <div style={{textAlign: 'right'}}>
                          <p style={{fontSize: '1rem', color: 'white', fontWeight: '500', margin: 0}}>${item.total.toFixed(2)}</p>
                        </div>
                      </div>
                      <div style={{display: 'flex', gap: '0.5rem', justifyContent: 'flex-end'}}>
                        <button
                          onClick={() => setEditingService(item.id)}
                          style={{
                            display: 'flex',
                            alignItems: 'center',
                            gap: '0.25rem',
                            padding: '0.25rem 0.5rem',
                            background: 'rgba(59, 130, 246, 0.2)',
                            border: '1px solid rgba(59, 130, 246, 0.3)',
                            borderRadius: '0.25rem',
                            color: '#60a5fa',
                            cursor: 'pointer',
                            fontSize: '0.75rem',
                            fontWeight: '500'
                          }}
                        >
                          <Edit style={{height: '0.75rem', width: '0.75rem'}} />
                          Edit
                        </button>
                        <button
                          onClick={() => handleRemoveContractor(item.id)}
                          style={{
                            display: 'flex',
                            alignItems: 'center',
                            gap: '0.25rem',
                            padding: '0.25rem 0.5rem',
                            background: 'rgba(245, 158, 11, 0.2)',
                            border: '1px solid rgba(245, 158, 11, 0.3)',
                            borderRadius: '0.25rem',
                            color: '#f59e0b',
                            cursor: 'pointer',
                            fontSize: '0.75rem',
                            fontWeight: '500'
                          }}
                        >
                          <Users style={{height: '0.75rem', width: '0.75rem'}} />
                          Remove Contractor
                        </button>
                        <button
                          onClick={() => handleDeleteService(item.id)}
                          style={{
                            display: 'flex',
                            alignItems: 'center',
                            gap: '0.25rem',
                            padding: '0.25rem 0.5rem',
                            background: 'rgba(239, 68, 68, 0.2)',
                            border: '1px solid rgba(239, 68, 68, 0.3)',
                            borderRadius: '0.25rem',
                            color: '#f87171',
                            cursor: 'pointer',
                            fontSize: '0.75rem',
                            fontWeight: '500'
                          }}
                        >
                          <Trash2 style={{height: '0.75rem', width: '0.75rem'}} />
                          Delete
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
              ) : (
                <div style={{
                  padding: '2rem',
                  textAlign: 'center',
                  color: '#cbd5e1'
                }}>
                  <Users style={{height: '2rem', width: '2rem', margin: '0 auto 0.5rem auto', opacity: 0.5}} />
                  <p style={{fontSize: '0.875rem', margin: 0}}>No contractors assigned</p>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Email Modal */}
      {showEmailModal && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: 'rgba(0, 0, 0, 0.8)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000
        }}>
          <div style={{
            background: 'rgba(30, 41, 59, 0.95)',
            backdropFilter: 'blur(8px)',
            border: '1px solid rgba(255, 255, 255, 0.2)',
            borderRadius: '0.75rem',
            padding: '2rem',
            width: '90%',
            maxWidth: '500px',
            maxHeight: '80vh',
            overflow: 'auto'
          }}>
            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '1.5rem'}}>
              <h2 style={{fontSize: '1.5rem', fontWeight: 'bold', color: 'white', margin: 0}}>Send Quote via Email</h2>
              <button
                onClick={() => setShowEmailModal(false)}
                style={{
                  background: 'none',
                  border: 'none',
                  color: '#cbd5e1',
                  cursor: 'pointer',
                  padding: '0.5rem'
                }}
              >
                <X style={{height: '1.5rem', width: '1.5rem'}} />
              </button>
            </div>
            
            <div style={{marginBottom: '1rem'}}>
              <label style={{display: 'block', fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.5rem'}}>To:</label>
              <input
                type="email"
                value={emailData.to}
                onChange={(e) => setEmailData({...emailData, to: e.target.value})}
                style={{
                  width: '100%',
                  padding: '0.75rem',
                  background: 'rgba(255, 255, 255, 0.1)',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '0.5rem',
                  color: 'white',
                  fontSize: '0.875rem'
                }}
              />
            </div>
            
            <div style={{marginBottom: '1rem'}}>
              <label style={{display: 'block', fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.5rem'}}>Subject:</label>
              <input
                type="text"
                value={emailData.subject}
                onChange={(e) => setEmailData({...emailData, subject: e.target.value})}
                style={{
                  width: '100%',
                  padding: '0.75rem',
                  background: 'rgba(255, 255, 255, 0.1)',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '0.5rem',
                  color: 'white',
                  fontSize: '0.875rem'
                }}
              />
            </div>
            
            <div style={{marginBottom: '1.5rem'}}>
              <label style={{display: 'block', fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.5rem'}}>Message:</label>
              <textarea
                value={emailData.message}
                onChange={(e) => setEmailData({...emailData, message: e.target.value})}
                rows={6}
                style={{
                  width: '100%',
                  padding: '0.75rem',
                  background: 'rgba(255, 255, 255, 0.1)',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '0.5rem',
                  color: 'white',
                  fontSize: '0.875rem',
                  resize: 'vertical'
                }}
              />
            </div>
            
            <div style={{display: 'flex', gap: '0.75rem', justifyContent: 'flex-end'}}>
              <button
                onClick={() => setShowEmailModal(false)}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'rgba(255, 255, 255, 0.1)',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500'
                }}
              >
                Cancel
              </button>
              <button
                onClick={handleSendEmail}
                disabled={sendingEmail}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',
                  border: 'none',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: sendingEmail ? 'not-allowed' : 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500',
                  opacity: sendingEmail ? 0.6 : 1
                }}
              >
                {sendingEmail ? 'Sending...' : 'Send Email'}
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Convert to Invoice Confirmation Modal */}
      {showConvertConfirm && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: 'rgba(0, 0, 0, 0.8)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000
        }}>
          <div style={{
            background: 'rgba(30, 41, 59, 0.95)',
            backdropFilter: 'blur(8px)',
            border: '1px solid rgba(255, 255, 255, 0.2)',
            borderRadius: '0.75rem',
            padding: '2rem',
            width: '90%',
            maxWidth: '400px'
          }}>
            <div style={{textAlign: 'center', marginBottom: '1.5rem'}}>
              <DollarSign style={{height: '3rem', width: '3rem', color: '#10b981', margin: '0 auto 1rem auto'}} />
              <h2 style={{fontSize: '1.5rem', fontWeight: 'bold', color: 'white', marginBottom: '0.5rem'}}>Convert to Invoice</h2>
              <p style={{fontSize: '0.875rem', color: '#cbd5e1', margin: 0}}>
                This will create a new unpaid invoice based on this quote. The quote status will be updated to 'converted'.
              </p>
            </div>
            
            <div style={{display: 'flex', gap: '0.75rem', justifyContent: 'center'}}>
              <button
                onClick={() => setShowConvertConfirm(false)}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'rgba(255, 255, 255, 0.1)',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500'
                }}
              >
                Cancel
              </button>
              <button
                onClick={handleConvertToInvoice}
                disabled={converting}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',
                  border: 'none',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: converting ? 'not-allowed' : 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500',
                  opacity: converting ? 0.6 : 1
                }}
              >
                {converting ? 'Converting...' : 'Convert to Invoice'}
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Delete Confirmation Modal */}
      {showDeleteConfirm && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: 'rgba(0, 0, 0, 0.8)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000
        }}>
          <div style={{
            background: 'rgba(30, 41, 59, 0.95)',
            backdropFilter: 'blur(8px)',
            border: '1px solid rgba(255, 255, 255, 0.2)',
            borderRadius: '0.75rem',
            padding: '2rem',
            width: '90%',
            maxWidth: '400px'
          }}>
            <div style={{textAlign: 'center', marginBottom: '1.5rem'}}>
              <AlertCircle style={{height: '3rem', width: '3rem', color: '#f87171', margin: '0 auto 1rem auto'}} />
              <h2 style={{fontSize: '1.5rem', fontWeight: 'bold', color: 'white', marginBottom: '0.5rem'}}>Delete Quote</h2>
              <p style={{fontSize: '0.875rem', color: '#cbd5e1', margin: 0}}>
                Are you sure you want to delete this quote? This action cannot be undone.
              </p>
            </div>
            
            <div style={{display: 'flex', gap: '0.75rem', justifyContent: 'center'}}>
              <button
                onClick={() => setShowDeleteConfirm(false)}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'rgba(255, 255, 255, 0.1)',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500'
                }}
              >
                Cancel
              </button>
              <button
                onClick={handleDeleteQuote}
                disabled={deleting}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',
                  border: 'none',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: deleting ? 'not-allowed' : 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500',
                  opacity: deleting ? 0.6 : 1
                }}
              >
                {deleting ? 'Deleting...' : 'Delete Quote'}
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Add Service Modal */}
      {showAddServiceModal && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: 'rgba(0, 0, 0, 0.8)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000
        }}>
          <div style={{
            background: 'rgba(30, 41, 59, 0.95)',
            backdropFilter: 'blur(8px)',
            border: '1px solid rgba(255, 255, 255, 0.2)',
            borderRadius: '0.75rem',
            padding: '2rem',
            width: '90%',
            maxWidth: '500px'
          }}>
            <div style={{textAlign: 'center', marginBottom: '1.5rem'}}>
              <h2 style={{fontSize: '1.5rem', fontWeight: 'bold', color: 'white', marginBottom: '0.5rem'}}>Add Service</h2>
              <p style={{fontSize: '0.875rem', color: '#cbd5e1', margin: 0}}>
                Add a new service to this quote
              </p>
            </div>
            
            <div style={{display: 'flex', gap: '0.75rem', justifyContent: 'center'}}>
              <button
                onClick={() => setShowAddServiceModal(false)}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'rgba(255, 255, 255, 0.1)',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500'
                }}
              >
                Cancel
              </button>
              <button
                onClick={() => {
                  alert('Add service functionality will be implemented')
                  setShowAddServiceModal(false)
                }}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',
                  border: 'none',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500'
                }}
              >
                Add Service
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Add Contractor Modal */}
      {showAddContractorModal && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: 'rgba(0, 0, 0, 0.8)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000
        }}>
          <div style={{
            background: 'rgba(30, 41, 59, 0.95)',
            backdropFilter: 'blur(8px)',
            border: '1px solid rgba(255, 255, 255, 0.2)',
            borderRadius: '0.75rem',
            padding: '2rem',
            width: '90%',
            maxWidth: '500px'
          }}>
            <div style={{textAlign: 'center', marginBottom: '1.5rem'}}>
              <h2 style={{fontSize: '1.5rem', fontWeight: 'bold', color: 'white', marginBottom: '0.5rem'}}>Assign Contractor</h2>
              <p style={{fontSize: '0.875rem', color: '#cbd5e1', margin: 0}}>
                Assign a contractor to this quote
              </p>
            </div>
            
            <div style={{marginBottom: '1.5rem'}}>

            <div style={{marginBottom: '1.5rem'}}>
              <label style={{display: 'block', fontSize: '0.875rem', color: '#cbd5e1', marginBottom: '0.5rem'}}>Select Contractor:</label>
              <select
                value={selectedContractor}
                onChange={(e) => setSelectedContractor(e.target.value)}
                style={{
                  width: '100%',
                  padding: '0.75rem',
                  background: 'rgba(255, 255, 255, 0.1)',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '0.5rem',
                  color: 'white',
                  fontSize: '0.875rem'
                }}
              >
                <option value="">Choose a contractor...</option>
                {contractors.map((contractor) => (
                  <option key={contractor.id} value={contractor.id}>
                    {contractor.name} - ${contractor.rate}/hr
                  </option>
                ))}
              </select>
            </div>
            
            <div style={{display: 'flex', gap: '0.75rem', justifyContent: 'center'}}>
              <button
                onClick={() => {
                  setShowAddContractorModal(false)
                  setSelectedContractor('')
                  
                }}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'rgba(255, 255, 255, 0.1)',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500'
                }}
              >
                Cancel
              </button>
              <button
                onClick={handleAssignContractor}
                style={{
                  padding: '0.75rem 1.5rem',
                  background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',
                  border: 'none',
                  borderRadius: '0.5rem',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '0.875rem',
                  fontWeight: '500'
                }}
              >
                Assign Contractor
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}
